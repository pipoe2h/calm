{"status":{},"contains_secrets":false,"product_version":"2.9.8","spec":{"description":" Users Provisioning DSL Blueprint ","resources":{"client_attrs":{"SysTenantInitDeployment":{"y":-836.2857142857,"x":-158.7142857143}},"service_definition_list":[{"singleton":false,"action_list":[{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"0_generate_customer_id"},{"kind":"app_task","name":"1_create_nsx_objs"},{"kind":"app_task","name":"2_get_nsx_seg_uuid"},{"kind":"app_task","name":"3_create_ad_objects"},{"kind":"app_task","name":"4_create_project"},{"kind":"app_task","name":"5_create_admin_group"},{"kind":"app_task","name":"6_create_operator_group"},{"kind":"app_task","name":"7_get_project_spec_version"},{"kind":"app_task","name":"8_create_environment"},{"kind":"app_task","name":"9_update_project"},{"kind":"app_task","name":"10_publish_catalog"}],"name":"95e8fb10_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"3_create_ad_objects"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"4_create_project"}},{"from_task_reference":{"kind":"app_task","name":"4_create_project"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"5_create_admin_group"}},{"from_task_reference":{"kind":"app_task","name":"5_create_admin_group"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"6_create_operator_group"}},{"from_task_reference":{"kind":"app_task","name":"6_create_operator_group"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"7_get_project_spec_version"}},{"from_task_reference":{"kind":"app_task","name":"7_get_project_spec_version"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"8_create_environment"}},{"from_task_reference":{"kind":"app_task","name":"8_create_environment"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"9_update_project"}},{"from_task_reference":{"kind":"app_task","name":"9_update_project"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"10_publish_catalog"}},{"from_task_reference":{"kind":"app_task","name":"0_generate_customer_id"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"1_create_nsx_objs"}},{"from_task_reference":{"kind":"app_task","name":"1_create_nsx_objs"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"2_get_nsx_seg_uuid"}},{"from_task_reference":{"kind":"app_task","name":"2_get_nsx_seg_uuid"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"3_create_ad_objects"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"0_generate_customer_id","attrs":{"exit_status":[],"script":"\n\n\n# gerneating a new tenant random ID\n# ================================================================\ndef generate_TENANT_UUID():\n  id_len = 0\n  while id_len <> 16:\n      TENANT_UUID = base64.b64encode(uuid.uuid4().bytes).decode().replace('+', '').replace('\/','')[:16]\n      radom_id = TENANT_UUID.upper()\n      if tenant_id_is_unique(TENANT_UUID):\n          id_len = len(TENANT_UUID)\n      else:\n          id_len = 0\n      \n\n  return TENANT_UUID.upper()\n  \n\n# api call function\n# ================================================================\ndef http_request(api_endpoint, payload='', method='POST'):\n  username = '@@{PCCred.username}@@'\n  username_secret = '@@{PCCred.secret}@@'\n  pc_address = '@@{PC_IP}@@'\n  pc_port = '9440'\n\n  url = \"https:\/\/{}:{}{}\".format(\n      pc_address,\n      pc_port,\n      api_endpoint\n  )\n  \n  headers = {\n      'Content-Type': 'application\/json',\n      'Accept': 'application\/json'\n  }\n  \n  if len(payload) > 0:\n      payload = json.dumps(payload)\n      \n  \n  resp = urlreq(\n      url,\n      verb=method,\n      auth='BASIC',\n      user=username,\n      passwd=username_secret,\n      params=payload,\n      headers=headers,\n      verify=False\n  )\n  \n  if resp.ok:\n      return json.loads(resp.content)\n  else:\n      print('Error in API call')\n      exit(1)\n\n\n# check if generated ID is unique and never used before\n# ----------------------------------------------------------\ndef tenant_id_is_unique(_id):\n    api_endpoint = '\/api\/nutanix\/v3\/projects\/list'\n    payload = {\n        \"filter\": \"name==TENANT-{}\".format(_id),\n        \"kind\": \"project\",\n        \"length\": 10\n    }\n    \n    resp = http_request(api_endpoint, payload)\n    if resp['metadata']['length'] == 0:\n        return True\n    else:\n        return False\n    \n# convert domain name to Microsoft AD path\n# -----------------------------------------------------------\ndef convert_domain_to_ad_path(domain, root_ou):\n    path = ''\n    if domain[len(domain)-1:] != '.':\n        domain = domain + '.'\n    \n    while domain.find('.') >= 0:\n        x = domain.find('.')\n        path = path + ',DC={}'.format(domain[:x])\n        domain = domain[x+1:]\n    \n    return '{},{}'.format(root_ou, path[1:])\n\n# get role UUID using role name (returns first result only)\n# ------------------------------------------------------------\ndef get_role_uuid(role_name):\n  api_endpoint = '\/api\/nutanix\/v3\/roles\/list'\n  payload = {\n      'filter': 'name=={}'.format(role_name),\n      'kind': 'role',\n      'offset': 0\n  }\n  result = http_request(api_endpoint, payload)\n  if result['entities']:\n      return result['entities'][0]['metadata']['uuid']\n  else:\n      return None\n    \n\n# get Directory service UUID from Prism Central\n# ------------------------------------------------------------\ndef get_directory_uuid(domain_name):\n  api_endpoint = '\/api\/nutanix\/v3\/directory_services\/list'\n  payload = {'filter': '', 'kind': 'directory_service'}\n  dirs = http_request(api_endpoint, payload)\n  for item in dirs['entities']:\n    if item['spec']['resources']['domain_name'] == domain_name:\n      return item['metadata']['uuid']\n    \n  return None\n\n\n# get pc_account uuid\n# -------------------------------------------------------------\ndef get_cloud_account_uuid(account_name='@@{CLOUD_ACCOUNT_NAME}@@'):\n  api_endpoint = '\/api\/nutanix\/v3\/accounts\/list'\n  payload = {'filter': 'state!=DELETED;state!=DRAFT;name=={}'.format(account_name)}\n  accounts = http_request(api_endpoint, payload)\n  for account in accounts['entities']:\n      if account['metadata']['name'] == account_name:\n          return account['metadata']['uuid']\n      \n  return None\n\n\n\nvar_id = generate_TENANT_UUID()\nad_path = convert_domain_to_ad_path('@@{DOMAIN}@@', '@@{ROOT_OU}@@')\nadmin_role_uuid = get_role_uuid('@@{ROLE_ADMIN}@@')\noperator_role_uuid = get_role_uuid('@@{ROLE_OPERATOR}@@')\ndirectory_uuid = get_directory_uuid('@@{DOMAIN}@@')\ncloud_account_uuid = get_cloud_account_uuid()\n\n\n\nprint('TENANT_UUID={}'.format(var_id))\nprint('AD_PATH=OU={}'.format(ad_path))\nprint('ROLE_ADMIN_UUID={}'.format(admin_role_uuid))\nprint('ROLE_OPERATOR_UUID={}'.format(operator_role_uuid))\n#print('DIRECTORY_UUID={}'.format(directory_uuid))\nprint('CLOUD_ACCOUNT_UUID={}'.format(cloud_account_uuid))\n\n","eval_variables":["TENANT_UUID","AD_PATH","ROLE_ADMIN_UUID","ROLE_OPERATOR_UUID","CLOUD_ACCOUNT_UUID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"1_create_nsx_objs","attrs":{"script":"nsx_admin = '@@{cred_nsx_api.username}@@'\nnsx_password = '@@{cred_nsx_api.secret}@@'\nnsx_ip = '@@{nsx_mgr_ip}@@'\nnsx_dhcp = '@@{NSX_DHCP_SERVER}@@'\nnsx_tier0_id = '@@{t0Id}@@'\ntenant_uuid = '@@{TENANT_UUID}@@'\nnsx_edge_cluster_uuid = '@@{ecUuid}@@'\nnsx_ipam_gw = '@@{defaultGwIp}@@'\nnsx_ipam_range = '@@{dhcp_range}@@'\nnsx_ipam_cidr = '@@{network_cidr}@@'\nnsx_tz_uuid = '@@{tzUuid}@@'\nnsx_ipam_dns = '@@{DNS}@@'\nnsx_domain_name = '@@{DOMAIN_NAME}@@'\n\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\n\npayload = {\n    \"resource_type\": \"Infra\",\n    \"id\": \"infra\",\n    \"children\": [\n      {\n        \"Tier1\": {\n          \"tier0_path\": \"\/infra\/tier-0s\/{}\".format(nsx_tier0_id),\n          \"failover_mode\": \"NON_PREEMPTIVE\",\n          \"dhcp_config_paths\": [\n              \"\/infra\/dhcp-server-configs\/{}\".format(nsx_dhcp)\n          ],\n          \"force_whitelisting\": \"false\",\n          \"default_rule_logging\": \"false\",\n          \"disable_firewall\": \"false\",\n          \"resource_type\": \"Tier1\",\n          \"id\": \"{}-tier-1-gw\".format(tenant_uuid),\n          \"description\": \"{}-tier-1-gw\".format(tenant_uuid),\n          \"display_name\": \"{}-tier-1-gw\".format(tenant_uuid),\n          \"route_advertisement_types\": [\n              \"TIER1_CONNECTED\",\n              \"TIER1_STATIC_ROUTES\"\n          ],\n          \"tags\": [\n            {\"scope\": \"calm\", \"tag\": \"{}\".format(tenant_uuid)}\n          ],\n          \"children\": [\n            { \n                \"resource_type\": \"ChildLocaleServices\",\n                \"LocaleServices\":{ \n                   \"resource_type\": \"LocaleServices\",\n                   \"id\": \"{}\".format(nsx_edge_cluster_uuid),\n                   \"edge_cluster_path\": \"\/infra\/sites\/default\/enforcement-points\/default\/edge-clusters\/{}\".format(nsx_edge_cluster_uuid)\n                }\n             },\n            {\n                \"Segment\": {\n                  \"subnets\": [\n                    {\n                      \"gateway_address\": \"{}\".format(nsx_ipam_gw),\n                      \"dhcp_ranges\": [\n                          \"{}\".format(nsx_ipam_range)\n                      ],\n                      \"network\": \"{}\".format(nsx_ipam_cidr)\n                    }\n                  ],\n                  \"resource_type\": \"Segment\",\n                  \"id\": \"{}-default\".format(tenant_uuid),\n                  \"description\": \"{}-default\".format(tenant_uuid),\n                  \"display_name\": \"{}-default\".format(tenant_uuid),\n                  \"transport_zone_path\": \"\/infra\/sites\/default\/enforcement-points\/default\/transport-zones\/{}\".format(nsx_tz_uuid),\n                  \"tags\": [\n                    {\"scope\": \"calm\", \"tag\": \"{}\".format(tenant_uuid)}\n                  ],\n                  \"marked_for_delete\": \"false\"\n                },\n                \"resource_type\": \"ChildSegment\",\n                \"marked_for_delete\": \"false\"\n            }\n          ],\n          \"marked_for_delete\": \"false\"\n        },\n        \"resource_type\": \"ChildTier1\",\n        \"marked_for_delete\": \"false\"\n      },\n      { \n        \"resource_type\": \"ChildDomain\",\n        \"marked_for_delete\": \"false\",\n        \"Domain\":{ \n           \"id\": \"default\",\n           \"resource_type\": \"Domain\",\n           \"marked_for_delete\": \"false\",\n           \"children\":[ \n              { \n                 \"resource_type\": \"ChildGroup\",\n                 \"Group\":{ \n                    \"resource_type\": \"Group\",\n                    \"marked_for_delete\": \"false\",\n                    \"id\": \"{}-TENANT\".format(tenant_uuid),\n                    \"display_name\": \"{}-TENANT\".format(tenant_uuid),\n                    \"tags\": [\n                        {\"scope\": \"calm\", \"tag\": \"{}\".format(tenant_uuid)}\n                    ],\n                    \"expression\": [\n                        {\n                          \"member_type\": \"VirtualMachine\",\n                          \"key\": \"Name\",\n                          \"operator\": \"STARTSWITH\",\n                          \"value\": \"{}\".format(tenant_uuid),\n                          \"resource_type\": \"Condition\",\n                          \"marked_for_delete\": \"false\"\n                        },\n                        {\n                          \"conjunction_operator\": \"OR\",\n                          \"resource_type\": \"ConjunctionOperator\",\n                          \"marked_for_delete\": \"false\"\n                        },\n                        {\n                          \"member_type\": \"LogicalSwitch\",\n                          \"key\": \"Tag\",\n                          \"operator\": \"EQUALS\",\n                          \"value\": \"calm|{}\".format(tenant_uuid),\n                          \"resource_type\": \"Condition\",\n                          \"marked_for_delete\": \"false\"\n                        }\n                    ]\n                 }\n              },\n              {\n                 \"resource_type\": \"ChildSecurityPolicy\",\n                 \"marked_for_delete\": \"false\",\n                 \"SecurityPolicy\":{\n                    \"resource_type\": \"SecurityPolicy\",\n                    \"category\": \"Environment\",\n                    \"marked_for_delete\": \"false\",\n                    \"id\": \"{}-POLICY\".format(tenant_uuid),\n                    \"display_name\": \"{}-POLICY\".format(tenant_uuid),\n                    \"tags\": [\n                        {\"scope\": \"calm\", \"tag\": \"{}\".format(tenant_uuid)}\n                    ],\n                    \"rules\": [\n                        {\n                            \"sequence_number\": 10,\n                            \"sources_excluded\": \"false\",\n                            \"destinations_excluded\": \"true\",\n                            \"source_groups\": [\n                              \"\/infra\/domains\/default\/groups\/{}-TENANT\".format(tenant_uuid)\n                            ],\n                            \"destination_groups\": [\n                              \"\/infra\/domains\/default\/groups\/{}-TENANT\".format(tenant_uuid)\n                            ],\n                            \"services\": [\n                              \"ANY\"\n                            ],\n                            \"profiles\": [\n                              \"ANY\"\n                            ],\n                            \"action\": \"ALLOW\",\n                            \"logged\": \"false\",\n                            \"scope\": [\n                              \"\/infra\/domains\/default\/groups\/{}-TENANT\".format(tenant_uuid)\n                            ],\n                            \"disabled\": \"false\",\n                            \"notes\": \"\",\n                            \"direction\": \"IN_OUT\",\n                            \"tags\": [\n                                {\n                                    \"scope\": \"calm\",\n                                    \"tag\": \"{}\".format(tenant_uuid)\n                                }\n                            ],\n                            \"ip_protocol\": \"IPV4_IPV6\",\n                            \"resource_type\": \"Rule\",\n                            \"id\": \"{}-ALLOW-OUT\".format(tenant_uuid),\n                            \"display_name\": \"{}-ALLOW-OUT\".format(tenant_uuid),\n                            \"marked_for_delete\": \"false\"\n                          }\n                    ]\n                  }\n              }\n           ]\n        }\n      }\n    ],\n    \"marked_for_delete\": \"false\",\n    \"connectivity_strategy\": \"WHITELIST\"\n}\n\napi_action = '\/policy\/api\/v1\/infra'\nurl = 'https:\/\/{}{}'.format(\n    nsx_ip,\n    api_action\n)\n\nr = urlreq(\n    url,\n    verb='PATCH',\n    auth='BASIC', \n    user=nsx_admin, \n    passwd=nsx_password, \n    params=json.dumps(payload),\n    headers=headers,\n    verify=False\n)\n\nif r.ok:\n    sleep(10)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\n\napi_action = '\/api\/v1\/dhcp\/servers'\nurl = 'https:\/\/{}{}'.format(\n    nsx_ip,\n    api_action\n)\n\nr = urlreq(\n    url,\n    verb='GET',\n    auth='BASIC', \n    user=nsx_admin, \n    passwd=nsx_password, \n    headers=headers,\n    verify=False\n)\n\nif r.ok:\n    print json.loads(r.content)['results']\n    for dhcp in json.loads(r.content)['results']:\n        if dhcp['display_name'].startswith(tenant_uuid):\n            dhcp_id = dhcp['id']\n            print dhcp_id\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\n\napi_action = '\/api\/v1\/dhcp\/servers'\nurl = 'https:\/\/{}{}\/{}'.format(\n    nsx_ip,\n    api_action,\n    dhcp_id\n)\n\nr = urlreq(\n    url,\n    verb='GET',\n    auth='BASIC', \n    user=nsx_admin, \n    passwd=nsx_password, \n    headers=headers,\n    verify=False\n)\n\nif r.ok:\n    payload = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\n\npayload['ipv4_dhcp_server']['dns_nameservers'] = []\npayload['ipv4_dhcp_server']['dns_nameservers'].append(nsx_ipam_dns)\npayload['ipv4_dhcp_server']['domain_name'] = nsx_domain_name\n\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json', 'X-Allow-Overwrite': \"true\"}\n\nr = urlreq(\n    url,\n    verb='PUT',\n    auth='BASIC', \n    user=nsx_admin, \n    passwd=nsx_password,\n    params=json.dumps(payload),\n    headers=headers,\n    verify=False\n)\n\nif r.ok:\n    exit(0)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"2_get_nsx_seg_uuid","attrs":{"exit_status":[],"script":"# api call function\n# ================================================================\ndef http_request(api_endpoint, payload='', method='POST'):\n  username = '@@{cred_nsx_api.username}@@'\n  username_secret = '@@{cred_nsx_api.secret}@@'\n  nsx_address = '@@{nsx_mgr_ip}@@'\n  nsx_port = '443'\n\n  url = \"https:\/\/{}:{}{}\".format(\n      nsx_address,\n      nsx_port,\n      api_endpoint\n  )\n    \n  headers = {\n      'Content-Type': 'application\/json',\n      'Accept': 'application\/json'\n  }\n  \n  if len(payload) > 0:\n      payload = json.dumps(payload)\n      \n  \n  resp = urlreq(\n      url,\n      verb=method,\n      auth='BASIC',\n      user=username,\n      passwd=username_secret,\n      params=payload,\n      headers=headers,\n      verify=False\n  )\n\n  if resp.ok:\n      return json.loads(resp.content)\n  else:\n      print(json.loads(resp.content))\n      print('Error in API call')\n      exit(1)\n\n# get list of logical switches\n# ================================================================\ndef get_logical_switches():\n  api_url = '\/api\/v1\/logical-switches'\n  payload = {}\n  \n  result = http_request(api_url, payload=payload, method='GET')\n  \n  return result['results']\n  \n# get logical switch uuid\n# ================================================================\ndef get_ls_uuid(segment_name):\n  ls_list = get_logical_switches()\n  \n  for switch in ls_list:\n      if switch['display_name'] == segment_name:\n        return switch['id']\n        break\n\nls_uuid = get_ls_uuid('@@{TENANT_UUID}@@-default')\n\nprint \"NSX_SEGMENT_UUID={}\".format(ls_uuid)","eval_variables":["NSX_SEGMENT_UUID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"3_create_ad_objects","attrs":{"exit_status":[],"script":"\nWrite-Host \"`n====================================================\"\nwrite-Host \"Create OU for new customer\"\nNew-ADOrganizationalUnit -Name \"@@{TENANT_UUID}@@\" -Path \"@@{AD.AD_PATH}@@\" -PassThru\n\nWrite-Host \"`n====================================================\"\nwrite-Host \"Create new customer owner account\"\nNew-ADUser `\n -Name \"@@{FIRST_NAME}@@ @@{LAST_NAME}@@\" `\n -GivenName \"@@{FIRST_NAME}@@\" `\n -Surname \"@@{LAST_NAME}@@\" `\n -SamAccountName \"@@{USERID}@@\" `\n -UserPrincipalName \"@@{USERID}@@@@@{DOMAIN}@@\" `\n -Path \"OU=@@{TENANT_UUID}@@,@@{AD.AD_PATH}@@\" `\n -AccountPassword(ConvertTo-SecureString -asPlainText -Force -String \"@@{PASSWORD}@@\") `\n -EmailAddress \"@@{EMAIL}@@\" `\n -Description \"@@{TENANT_UUID}@@\" `\n -Company \"@@{COMPANY}@@\" `\n -MobilePhone \"@@{MOBILE}@@\" `\n -Enabled $True -PassThru\n \nWrite-Host \"`n====================================================\"\nwrite-Host \"Create Admins group for the new customer\"\n New-ADGroup `\n  -Name \"@@{TENANT_UUID}@@-ADMIN\" `\n  -SamAccountName \"@@{TENANT_UUID}@@-ADMIN\" `\n  -GroupCategory Security -GroupScope Global `\n  -DisplayName \"@@{TENANT_UUID}@@ - Admins\" `\n  -Path \"OU=@@{TENANT_UUID}@@,@@{AD.AD_PATH}@@\" `\n  -PassThru\n\n\nWrite-Host \"`n====================================================\"\nwrite-Host \"add the user to projecgt admin group\"\nAdd-ADGroupMember `\n -Identity \"@@{TENANT_UUID}@@-ADMIN\" `\n -Members \"@@{USERID}@@\" `\n -PassThru\n\n\nWrite-Host \"`n====================================================\"\nwrite-Host \"Create Operators group for the new customer\"\n New-ADGroup `\n  -Name \"@@{TENANT_UUID}@@-OPERATOR\" `\n  -SamAccountName \"@@{TENANT_UUID}@@-OPERATOR\" `\n  -GroupCategory Security -GroupScope Global `\n  -DisplayName \"@@{TENANT_UUID}@@ - Operators\" `\n  -Path \"OU=@@{TENANT_UUID}@@,@@{AD.AD_PATH}@@\" `\n  -PassThru\n  \n \n \nexit 0\n ","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"windows_admin"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"4_create_project","attrs":{"expected_response_params":[{"status":"SUCCESS","code":202,"type":""}],"request_body":"{\"spec\": {\"name\": \"TENANT-@@{TENANT_UUID}@@\", \"resources\": {\"subnet_reference_list\": [], \"external_user_group_reference_list\": [], \"user_reference_list\": []}, \"description\": \"Project for Tenant @@{TENANT_UUID}@@, created on: xx\"}, \"api_version\": \"3.1.0\", \"metadata\": {\"kind\": \"project\", \"spec_version\": 0, \"owner_reference\": {\"kind\": \"user\", \"uuid\": \"00000000-0000-0000-0000-000000000000\", \"name\": \"admin\"}, \"categories\": {}}}","headers":[{"regex":{"should_validate":true,"value":""},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"Content-Type","value":"application\/json","label":"","state":"NOT_VALIDATED","attrs":{"type":""},"editables":{},"is_hidden":false,"message_list":[],"options":{"type":"PREDEFINED","choices":[]}}],"url":"https:\/\/@@{PC_IP}@@:9440\/api\/nutanix\/v3\/projects","response_paths":{"PROJ_UUID":"$.metadata.uuid"},"retry_interval":10,"method":"POST","retry_count":1,"authentication":{"type":"basic_with_cred","credential_local_reference":{"kind":"app_credential","name":"PCCred"}},"tls_verify":false,"content_type":"application\/json","connection_timeout":120,"type":"","proxy_type":""},"timeout_secs":"0","type":"HTTP","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"5_create_admin_group","attrs":{"expected_response_params":[{"status":"SUCCESS","code":202,"type":""}],"request_body":"{\"spec\": {\"resources\": {\"directory_service_user_group\": {\"distinguished_name\": \"cn=@@{TENANT_UUID}@@-ADMIN,ou=@@{TENANT_UUID}@@,@@{AD_PATH}@@\"}}}, \"metadata\": {\"kind\": \"user_group\"}}","headers":[{"regex":{"should_validate":true,"value":""},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"Content-Type","value":"application\/json","label":"","state":"NOT_VALIDATED","attrs":{"type":""},"editables":{},"is_hidden":false,"message_list":[],"options":{"type":"PREDEFINED","choices":[]}}],"url":"https:\/\/@@{PC_IP}@@:9440\/api\/nutanix\/v3\/user_groups","response_paths":{"GROUP_ADMIN_UUID":"$.metadata.uuid"},"retry_interval":10,"method":"POST","retry_count":1,"authentication":{"type":"basic_with_cred","credential_local_reference":{"kind":"app_credential","name":"PCCred"}},"tls_verify":false,"content_type":"application\/json","connection_timeout":120,"type":"","proxy_type":""},"timeout_secs":"0","type":"HTTP","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"6_create_operator_group","attrs":{"expected_response_params":[{"status":"SUCCESS","code":202,"type":""}],"request_body":"{\"spec\": {\"resources\": {\"directory_service_user_group\": {\"distinguished_name\": \"cn=@@{TENANT_UUID}@@-OPERATOR,ou=@@{TENANT_UUID}@@,@@{AD_PATH}@@\"}}}, \"metadata\": {\"kind\": \"user_group\"}}","headers":[{"regex":{"should_validate":true,"value":""},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"Content-Type","value":"application\/json","label":"","state":"NOT_VALIDATED","attrs":{"type":""},"editables":{},"is_hidden":false,"message_list":[],"options":{"type":"PREDEFINED","choices":[]}}],"url":"https:\/\/@@{PC_IP}@@:9440\/api\/nutanix\/v3\/user_groups","response_paths":{"GROUP_OPERATOR_UUID":"$.metadata.uuid"},"retry_interval":10,"method":"POST","retry_count":1,"authentication":{"type":"basic_with_cred","credential_local_reference":{"kind":"app_credential","name":"PCCred"}},"tls_verify":false,"content_type":"application\/json","connection_timeout":120,"type":"","proxy_type":""},"timeout_secs":"0","type":"HTTP","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"7_get_project_spec_version","attrs":{"expected_response_params":[{"status":"SUCCESS","code":200,"type":""}],"request_body":"","headers":[{"regex":{"should_validate":true,"value":""},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"Content-Type","value":"application\/json","label":"","state":"NOT_VALIDATED","attrs":{"type":""},"editables":{},"is_hidden":false,"message_list":[],"options":{"type":"PREDEFINED","choices":[]}}],"url":"https:\/\/@@{PC_IP}@@:9440\/api\/nutanix\/v3\/projects\/@@{PROJ_UUID}@@","response_paths":{"PROJ_SPEC":"$.metadata.spec_version"},"retry_interval":10,"method":"GET","retry_count":1,"authentication":{"type":"basic_with_cred","credential_local_reference":{"kind":"app_credential","name":"PCCred"}},"tls_verify":false,"content_type":"application\/json","connection_timeout":120,"type":"","proxy_type":""},"timeout_secs":"0","type":"HTTP","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"8_create_environment","attrs":{"exit_status":[],"script":"\nprism_user = '@@{PCCred.username}@@'\nprism_pass = '@@{PCCred.secret}@@'\n\n\nurl     = \"https:\/\/@@{PC_IP}@@:9440\/api\/nutanix\/v3\/environments\"\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\nenvuuid = str(uuid.uuid4())\nnameuuid = str(uuid.uuid4())\n\n\nprint \"Environment uuid \" +envuuid\nprint \"Name uuid \" +nameuuid\n\npayload = {\n  \"spec\": {\n    \"name\": nameuuid,\n        \"resources\": {\n            \"substrate_definition_list\": [\n                {\n                    \"variable_list\": [],\n                    \"type\": \"VMWARE_VM\",\n                    \"os_type\": \"Linux\",\n                    \"action_list\": [],\n                    \"readiness_probe\": {\n                        \"address\": '@' + '@{platform.ipAddressList[0]}@' + '@',\n                        \"disable_readiness_probe\": True,\n                        \"delay_secs\": \"60\",\n                        \"retries\": \"5\",\n                        \"connection_type\": \"SSH\",\n                        \"connection_port\": 22,\n                        \"connection_protocol\": \"\",\n                        \"login_credential_local_reference\": {\n                            \"kind\": \"app_credential\",\n                            \"uuid\": nameuuid\n                        }\n                    },\n                    \"name\": \"Untitled\",\n                    \"create_spec\": {\n                        \"name\": \"default-vm-@\" + \"@{calm_array_index}@\" + \"@-@\" + \"@{calm_time}@\" + \"@\",\n                        \"resources\": {\n                            \"memory_size_mib\": 2048,\n                            \"num_sockets\": 1,\n                            \"guest_customization\": {\n                                \"customization_type\": \"GUEST_OS_LINUX\"\n                            },\n                            \"num_vcpus_per_socket\": 1,\n                            \"account_uuid\": \"@@{CLOUD_ACCOUNT_UUID}@@\",\n                            \"nic_list\": [],\n                            \"template_nic_list\": [\n                                {\n                                    \"key\": 4000,\n                                    \"net_name\": \"@@{NSX_SEGMENT_UUID}@@\",\n                                    \"nic_type\": \"vmxnet3\",\n                                    \"is_deleted\": False\n                                }\n                            ],\n                            \"template_disk_list\": [\n                                {\n                                    \"is_deleted\": False,\n                                    \"disk_mode\": \"persistent\",\n                                    \"device_slot\": 0,\n                                    \"adapter_type\": \"SCSI\",\n                                    \"disk_size_mb\": 10240,\n                                    \"location\": \"@@{DATASTORE_PATH}@@\",\n                                    \"disk_type\": \"disk\",\n                                    \"controller_key\": 1000,\n                                    \"key\": 2000\n                                },\n                                {\n                                    \"is_deleted\": False,\n                                    \"device_slot\": 0,\n                                    \"adapter_type\": \"SATA\",\n                                    \"disk_size_mb\": None,\n                                    \"disk_type\": \"cdrom\",\n                                    \"controller_key\": 15000,\n                                    \"key\": 16000\n                                }\n                            ],\n                            \"template_controller_list\": []\n                        },\n                        \"type\": \"PROVISION_VMWARE_VM\",\n                        \"host\": \"@@{ESXI_UUID}@@\",\n                        \"template\": \"@@{TEMPLATE_UUID}@@\",\n                        \"datastore\": \"@@{DATASTORE_PATH}@@\"\n                    },\n                    \"editables\": {\n                        \"create_spec\": {\n                            \"resources\": {\n                                \"nic_list\": {},\n                                \"controller_list\": {},\n                                \"template_nic_list\": {},\n                                \"template_controller_list\": {},\n                                \"template_disk_list\": {}\n                            }\n                        }\n                    },\n                    \"uuid\": str(uuid.uuid4())\n                }\n            ],\n            \"credential_definition_list\": [\n                {\n                    \"username\": \"root\",\n                    \"secret\": {\n                        \"attrs\": {\n                            \"is_secret_modified\": True\n                        },\n                        \"value\": \"@@{ENV_CRED_PASSWORD}@@\"\n                    },\n                    \"type\": \"PASSWORD\",\n                    \"name\": \"centos\",\n                    \"uuid\": nameuuid\n                }\n            ]\n        }\n    },\n  \"api_version\": \"3.0\",\n  \"metadata\": {\n    \"kind\": \"environment\",\n    \"uuid\": envuuid\n  }\n}\n\n\nprism_user = '@@{PCCred.username}@@'\nprism_pass = '@@{PCCred.secret}@@'\n\n\nresp = urlreq(url, verb='POST', auth='BASIC', user=prism_user, passwd=prism_pass, params=json.dumps(payload), headers=headers)\n\nif resp.ok:\n  print json.dumps(json.loads(resp.content), indent=4)\n  print \"envuuid={0}\".format(json.loads(resp.content)['metadata']['uuid'])\nelse:\n  print \"Post create environment failed\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)","eval_variables":["envuuid"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"9_update_project","attrs":{"script":"# api call function\n# ================================================================\ndef http_request(api_endpoint, payload='', method='POST'):\n  username = '@@{PCCred.username}@@'\n  username_secret = '@@{PCCred.secret}@@'\n  pc_address = '@@{PC_IP}@@'\n  pc_port = '9440'\n\n  url = \"https:\/\/{}:{}{}\".format(\n      pc_address,\n      pc_port,\n      api_endpoint\n  )\n  \n  headers = {\n      'Content-Type': 'application\/json',\n      'Accept': 'application\/json'\n  }\n  \n  if len(payload) > 0:\n      payload = json.dumps(payload)\n      \n  \n  resp = urlreq(\n      url,\n      verb=method,\n      auth='BASIC',\n      user=username,\n      passwd=username_secret,\n      params=payload,\n      headers=headers,\n      verify=False\n  )\n  \n  if resp.ok:\n      return json.loads(resp.content)\n  else:\n      print('Error in API call')\n      exit(1)\n\n\n\n\ndef entity_collection_list(entities_all, entities_self):\n\n    default_list = []\n    for entity in entities_all:\n        default_list.append({\n            'operator': 'IN',\n            'left_hand_side': {'entity_type': entity},\n            'right_hand_side': {'collection': 'ALL'}\n        })\n\n    for entity in entities_self:\n        default_list.append({\n            'operator': 'IN',\n            'left_hand_side': {'entity_type': entity},\n            'right_hand_side': {'collection': 'SELF_OWNED'}\n        })\n\n    return default_list\n\n\ndef generate_filter_list(project_uuid, admin=True):\n    acl = []\n    acl.append({\n        'scope_filter_expression_list': [\n            {\n                'operator': 'IN',\n                'left_hand_side': 'PROJECT',\n                'right_hand_side': {'uuid_list': [project_uuid]}\n            }\n        ],\n        'entity_filter_expression_list': [\n            {\n                'operator': 'IN',\n                'left_hand_side': {'entity_type': 'ALL'},\n                'right_hand_side': {'collection': 'ALL'}\n            }\n        ]\n    })\n\n    if admin:\n        entities_all=['image', 'app_icon', 'category']\n        entities_self=['marketplace_item', 'app_task', 'app_variable']\n    else:\n        entities_all=['app_icon', 'category']\n        entities_self=[]\n\n    acl.append({\n    'entity_filter_expression_list':entity_collection_list(entities_all, \n                                                           entities_self)})\n    return acl\n        \n\ndef generate_project_payload(TENANT_UUID, AD_PATH, ROLE_ADMIN_UUID,\n    ROLE_OPERATOR_UUID, CLOUD_ACCOUNT_UUID, PROJ_UUID,\n    GROUP_ADMIN_UUID, GROUP_OPERATOR_UUID, PROJ_SPEC, VCPU, STORAGE, RAM):\n\n\n    filter_list_admin = generate_filter_list(PROJ_UUID)\n    filter_list_operator = generate_filter_list(PROJ_UUID, False)\n\n\n    admin_group =   {\n                        'kind': 'user_group',\n                        'name': 'CN={}-ADMIN,OU={},{}'.format(TENANT_UUID, TENANT_UUID, AD_PATH),\n                        'uuid': GROUP_ADMIN_UUID\n                    }\n\n    operator_group =    {\n                            'kind': 'user_group',\n                            'name': 'CN={}-OPERATOR,OU={},{}'.format(TENANT_UUID, TENANT_UUID, AD_PATH),\n                            'uuid': GROUP_OPERATOR_UUID\n                        }\n\n    acp_admin = {\n        'acp': {\n            'name': 'ACP-TENANT-{}'.format(TENANT_UUID),\n            'resources': {\n                'role_reference': {\n                    'kind': 'role',\n                    'uuid': ROLE_ADMIN_UUID\n                },\n                'user_group_reference_list': [admin_group],\n                'user_reference_list': [],\n                'filter_list': {'context_list': filter_list_admin}\n            },\n            'description': 'Admin role for {}'.format(TENANT_UUID)\n        },\n        'metadata': {\n            'kind': 'access_control_policy'\n        },\n        'operation': 'ADD'\n    }\n\n    acp_operator = {\n        'acp': {\n            'name': 'ACP-TENANT-{}'.format(TENANT_UUID),\n            'resources': {\n                'role_reference': {\n                    'kind': 'role',\n                    'uuid': ROLE_OPERATOR_UUID\n                },\n                'user_group_reference_list': [operator_group],\n                'user_reference_list': [],\n                'filter_list': {'context_list': filter_list_operator}\n            },\n            'description': 'Operator role for {}'.format(TENANT_UUID)\n        },\n        'metadata': {\n            'kind': 'access_control_policy'\n        },\n        'operation': 'ADD'\n    }\n\n    access_control_policy_list = [acp_admin, acp_operator]\n\n\n    project_detail = {\n        'name': 'TENANT-{}'.format(TENANT_UUID),\n        'resources': {\n            'resource_domain': {\n                'resources': [\n                    {'limit': VCPU, 'resource_type': 'VCPUS'},\n                    {'limit': STORAGE, 'resource_type': 'STORAGE'},\n                    {'limit': RAM, 'resource_type': 'MEMORY'}\n                ]\n            },\n            'account_reference_list': [\n                {\n                    'uuid': CLOUD_ACCOUNT_UUID,\n                    'kind': 'account'\n                }\n            ],\n            'environment_reference_list': [\n                {\n                    'kind': 'environment',\n                    'uuid': '@@{envuuid}@@'\n                }              \n            ],\n            'external_user_group_reference_list': [admin_group, operator_group],\n            'user_reference_list': [],\n            'subnet_reference_list': [],\n            'external_network_list': []\n        }\n    }\n\n    spec = {\n        'access_control_policy_list' : access_control_policy_list,\n        'project_detail': project_detail\n    }\n\n    metadata = {\n        'kind': 'project',\n        'uuid': PROJ_UUID,\n        'spec_version': PROJ_SPEC,\n        'owner_reference': {\n            'kind': 'user',\n            'uuid': '00000000-0000-0000-0000-000000000000',\n            'name': 'admin'\n        }\n    }\n\n    return {\n            'spec': spec,\n            'api_version': '3.1',\n            'metadata': metadata\n            }\n\n# ------------------------------------------------------------------------------\n# ------------------------------------------------------------------------------\n# ------------------------------------------------------------------------------\n# ------------------------------------------------------------------------------\n\n\npayload = generate_project_payload('@@{TENANT_UUID}@@', '@@{AD_PATH}@@', '@@{ROLE_ADMIN_UUID}@@',\n    '@@{ROLE_OPERATOR_UUID}@@', '@@{CLOUD_ACCOUNT_UUID}@@', '@@{PROJ_UUID}@@',\n    '@@{GROUP_ADMIN_UUID}@@', '@@{GROUP_OPERATOR_UUID}@@', @@{PROJ_SPEC}@@, @@{VCPU}@@, @@{STORAGE}@@, @@{RAM}@@)\n    \nprint(json.dumps(payload))\n\n\napi_endpoint = '\/api\/nutanix\/v3\/projects_internal\/@@{PROJ_UUID}@@'\n\nresult = http_request(api_endpoint, payload, method='PUT')\n\nprint(result)","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"10_publish_catalog","attrs":{"script":"# api call function\n# ================================================================\ndef http_request(api_endpoint, payload='', method='POST'):\n  username = '@@{PCCred.username}@@'\n  username_secret = '@@{PCCred.secret}@@'\n  pc_address = '@@{PC_IP}@@'\n  pc_port = '9440'\n\n  url = \"https:\/\/{}:{}{}\".format(\n      pc_address,\n      pc_port,\n      api_endpoint\n  )\n  \n  headers = {\n      'Content-Type': 'application\/json',\n      'Accept': 'application\/json'\n  }\n  \n  if len(payload) > 0:\n      payload = json.dumps(payload)\n      \n  \n  resp = urlreq(\n      url,\n      verb=method,\n      auth='BASIC',\n      user=username,\n      passwd=username_secret,\n      params=payload,\n      headers=headers,\n      verify=False\n  )\n  \n  if resp.ok:\n      return json.loads(resp.content)\n  else:\n      print('Error in API call')\n      exit(1)\n\n\n# get list of published items for Agora\n# ================================================================\ndef get_published_items():\n  api_url = '\/api\/nutanix\/v3\/groups'\n  payload = {}\n  payload['filter_criteria'] = 'marketplace_item_type_list==APP;(app_state==PUBLISHED)'\n  payload['entity_type'] = 'marketplace_item'\n  payload['group_member_attributes'] = [{'attribute': 'name'}]\n  \n  # load list of visible variables\n  prefix_list = json.loads('@@{MARKET_PREFIX}@@')['values']\n  \n  result = http_request(api_url, payload=payload)\n  \n  published_list = []\n  for entity_item in result['group_results'][0]['entity_results']:\n    blueprint_name = ''\n    # check for name field\n    for field in entity_item['data']:\n      if field.get('name', None) == 'name':\n        blueprint_name = field['values'][0]['values'][0]\n        \n    # check if the blueprint name is in the prefix list\n    if blueprint_name[0] == '_':\n      blueprint_prefix = blueprint_name[1:blueprint_name.find('_', 1)]\n      if blueprint_prefix in prefix_list:\n          published_list.append({ 'uuid': entity_item['entity_id'],\n                                  'name': blueprint_name,\n                                  'display_name': blueprint_name[blueprint_name.find('_', 1)+1:],\n                                  'category': blueprint_prefix })\n\n  return published_list\n\n\n# publish blueprint to project\n# ================================================================\ndef publish_blueprint(blueprint_uuid, project_uuid, project_name):\n  api_endpoint = '\/api\/nutanix\/v3\/calm_marketplace_items\/{}'.format(blueprint_uuid)\n  blueprint = http_request(api_endpoint, method='GET')\n  payload = {}\n  if blueprint['spec']['resources']:\n    payload['spec'] = blueprint['spec']\n    payload['metadata'] = blueprint['metadata']\n    payload['api_version'] = '3.0'\n    payload['spec']['resources']['project_reference_list'].append(\n      { 'kind': 'project',\n        'name': project_name,\n        'uuid': project_uuid })\n    \n  \n  api_endpoint = '\/api\/nutanix\/v3\/calm_marketplace_items\/{}'.format(blueprint_uuid)\n  result = http_request(api_endpoint, payload=payload, method='PUT')\n  \n  if result:\n    return True\n  else:\n    return False\n  \n\n\n# ================================================================\n# ================================================================\n# ================================================================\n\n# main run function\npublished_blueprints = get_published_items()\nproject_name = 'TENANT-{}'.format('@@{TENANT_UUID}@@')\nproject_uuid = '@@{PROJ_UUID}@@'\n\nfor blueprint in published_blueprints:\n    update_result = publish_blueprint(blueprint['uuid'], project_uuid, project_name)\n    if update_result:\n        print('Blueprint: \"{}\" added to project \"{}\"'.format(blueprint['name'], project_name))\n\n      \n\n\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"21e6f807_runbook","main_task_local_reference":{"kind":"app_task","name":"95e8fb10_dag"},"variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"t0Id","value":"T0-gw","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"SECRET","name":"ENV_CRED_PASSWORD","value":"","label":"","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"DATASTORE_NAME","value":" ","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"TEMPLATE_NAME","value":" ","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"CLUSTER_NAME","value":" ","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"network_cidr","value":" ","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"dhcp_range","value":" ","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"FIRST_NAME","value":" ","label":"FIRST NAME","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"LAST_NAME","value":" ","label":"LAST NAME","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"USERID","value":" ","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"SECRET","name":"PASSWORD","value":"","label":"","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"EMAIL","value":" ","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"MOBILE","value":" ","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"COMPANY","value":" ","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"defaultGwIp","value":" ","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}]},"name":"create_new_tenant"},{"description":"System action for creating an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"DAG_Task_for_Service_AD_action_create","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Service_AD_action_create","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Service_AD_action_create"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"DAG_Task_for_Service_AD_action_delete","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Service_AD_action_delete","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Service_AD_action_delete"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"DAG_Task_for_Service_AD_action_start","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Service_AD_action_start","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Service_AD_action_start"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"DAG_Task_for_Service_AD_action_stop","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Service_AD_action_stop","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Service_AD_action_stop"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"DAG_Task_for_Service_AD_action_restart","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Service_AD_action_restart","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Service_AD_action_restart"},"variable_list":[]},"name":"action_restart"},{"description":"System action for deleting an application. Does not delete created VMs","type":"system","critical":true,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"DAG_Task_for_Service_AD_action_soft_delete","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Service_AD_action_soft_delete","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Service_AD_action_soft_delete"},"variable_list":[]},"name":"action_soft_delete"}],"depends_on_list":[],"name":"AD","port_list":[],"tier":"","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"NSX_SEGMENT_UUID","value":"","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"envuuid","value":"","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"TENANT_UUID","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"AD_PATH","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"PROJ_UUID","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"AD_UUID","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"ROLE_ADMIN_UUID","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"ROLE_OPERATOR_UUID","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"GROUP_ADMIN_UUID","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"GROUP_OPERATOR_UUID","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"PROJ_SPEC","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"CLOUD_ACCOUNT_UUID","value":"","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"VCPU","value":"25","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"STORAGE","value":"1717986918400","label":"","attrs":{"type":""},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"RAM","value":"85899345920","label":"","attrs":{"type":""},"is_hidden":false}],"description":""}],"substrate_definition_list":[{"description":"Existing dummy VM ","action_list":[{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"SysTenantInitVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"505637b8_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"44cccf38_runbook","main_task_local_reference":{"kind":"app_task","name":"505637b8_dag"},"variable_list":[]},"name":"pre_action_create"},{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"SysTenantInitVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"339e708a_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"670ee02a_runbook","main_task_local_reference":{"kind":"app_task","name":"339e708a_dag"},"variable_list":[]},"name":"post_action_delete"}],"type":"EXISTING_VM","name":"SysTenantInitVM","readiness_probe":{"connection_type":"POWERSHELL","retries":"5","connection_protocol":"","connection_port":5985,"address":"@@{ip_address}@@","delay_secs":"60","disable_readiness_probe":true,"login_credential_local_reference":{"kind":"app_credential","name":"windows_admin"}},"os_type":"Windows","create_spec":{"type":"PROVISION_EXISTING_MACHINE","address":"@@{AD_IP}@@"},"variable_list":[]}],"credential_definition_list":[{"username":"administrator@ntnx.lab","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"windows_admin"},{"username":"admin","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"PCCred"},{"username":"admin","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"cred_nsx_api"}],"package_definition_list":[{"description":"","action_list":[],"type":"CUSTOM","service_local_reference_list":[{"kind":"app_service","name":"AD"}],"name":"SysTenantInitPackage","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"DAG_Task_for_Package_SysTenantInitPackage_action_install","state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Package_SysTenantInitPackage_action_install","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Package_SysTenantInitPackage_action_install"},"message_list":[],"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"DAG_Task_for_Package_SysTenantInitPackage_action_uninstall","state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"Runbook_for_Package_SysTenantInitPackage_action_uninstall","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Package_SysTenantInitPackage_action_uninstall"},"message_list":[],"variable_list":[]}},"variable_list":[]}],"app_profile_list":[{"deployment_create_list":[{"type":"GREENFIELD","action_list":[],"name":"SysTenantInitDeployment","min_replicas":"1","default_replicas":"1","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"SysTenantInitPackage"}],"substrate_local_reference":{"kind":"app_substrate","name":"SysTenantInitVM"},"options":{"type":""},"variable_list":[],"description":""}],"description":"","action_list":[{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Call_Runbook_task_for_21e6f807_runbook__58ebb1cd"}],"name":"3e1a8156_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Call_Runbook_task_for_21e6f807_runbook__58ebb1cd","attrs":{"type":"","inarg_list":[],"runbook_reference":{"kind":"app_runbook","name":"21e6f807_runbook"}},"timeout_secs":"0","type":"CALL_RUNBOOK","variable_list":[]}],"description":"","name":"7b18362a_runbook","main_task_local_reference":{"kind":"app_task","name":"3e1a8156_dag"},"variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"SECRET","name":"ENV_CRED_PASSWORD","value":"","label":"","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"DATASTORE_NAME","value":"vmContainer1","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"TEMPLATE_NAME","value":"ed68be42-bc6a-4dcc-bd6f-49b4f3f96997","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"CLUSTER_NAME","value":"Cluster1","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"FIRST_NAME","value":" ","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"LAST_NAME","value":" ","label":"LAST NAME","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"USERID","value":" ","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"SECRET","name":"PASSWORD","value":"","label":"","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"EMAIL","value":" ","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"MOBILE","value":" ","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"COMPANY","value":" ","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"regex":{"should_validate":true,"value":"^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\\/([1-9]|[1-2][0-9]|3[0-2]))$"},"val_type":"STRING","is_mandatory":true,"description":"Format x.x.x.x\/x","data_type":"BASE","type":"LOCAL","name":"network_cidr","value":"","label":"Network CIDR","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"regex":{"should_validate":true,"value":"^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\\/([1-9]|[1-2][0-9]|3[0-2]))$"},"val_type":"STRING","is_mandatory":true,"description":"Format x.x.x.x\/x","data_type":"BASE","type":"LOCAL","name":"defaultGwIp","value":"","label":"DEFAULT_GATEWAY","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"dhcp_range","value":"x.x.x.x-x.x.x.y","label":"DHCP range","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}]},"name":"onboard_new_customer"}],"name":"Default","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"Edge Cluster UUID","data_type":"BASE","type":"LOCAL","name":"ecUuid","value":"41eeeed1-7c24-4c79-becc-b82ef4aad1e5","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"TEMPLATE_UUID","value":"5022f196-9b7c-8cbf-a9f5-33123ac6d54f","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"ESXI_UUID","value":"00000000-0000-0000-0000-0cc47ac451f2","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"DATASTORE_PATH","value":"ds:\/\/\/vmfs\/volumes\/4e652813-702600f3\/","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"NSX_DHCP_SERVER","value":"nsx-dhcp","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"markedForDelete","value":"False","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"tzUuid","value":"b890f864-f55c-4804-8f9f-82c0cfa1bcb1","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"nsx_mgr_ip","value":"10.38.177.47","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"CLOUD_ACCOUNT_NAME","value":"PHX177","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"DNS","value":"10.38.177.43","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"DOMAIN_NAME","value":"ntnx.lab","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"DOMAIN_SEARCH","value":"ntnx.lab","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"PC_IP","value":"10.38.177.39","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"PC_PORT","value":"9440","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"AD_IP","value":"10.38.177.43","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"DOMAIN","value":"ntnx.lab","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"AD_NAME","value":"DC01","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"ROLE_OPERATOR","value":"Operator","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"ROOT_OU","value":"Tenants","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"ROLE_ADMIN","value":"Consumer","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"MARKET_PREFIX","value":"{\"values\": [\"INFRA\", \"NET\", \"ERA\", \"K8S\"]}","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true}]}],"published_service_definition_list":[],"default_credential_local_reference":{"kind":"app_credential","name":"windows_admin"},"type":"USER"},"name":"cloudAdmin-tenantOnboard_v04"},"api_version":"3.0","metadata":{"last_update_time":"1586331628478726","kind":"blueprint","spec_version":5,"creation_time":"1585520267727940","name":"cloudAdmin-tenantOnboard_v04"}}